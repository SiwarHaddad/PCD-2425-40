import { Component, OnInit } from '@angular/core';
import { ReportService } from '../../../core/services/report.service';
import { ReportResponse } from '../../../core/models/report.model';
import { CommonModule } from '@angular/common';
import { LoadingSpinnerComponent } from '../../../shared/components/loading-spinner/loading-spinner.component';
import {Router, RouterLink} from '@angular/router';
import { StatusBadgeComponent } from '../../../shared/components/status-badge/status-badge.component';
import { catchError, finalize } from 'rxjs/operators';
import { of } from 'rxjs';
import { ToastrService } from 'ngx-toastr';
import { AuthService } from '../../../core/services/auth.service';

@Component({
  selector: 'app-auto-generated-report',
  templateUrl: './auto-generated-report.component.html',
  styleUrls: ['./auto-generated-report.component.scss'],
  standalone: true,
  imports: [CommonModule, LoadingSpinnerComponent],
})
export class AutoGeneratedReportsComponent implements OnInit {
  reports: ReportResponse[] = [];
  loading = false;
  error: string | null = null;

  constructor(
    private reportService: ReportService,
    private toastr: ToastrService,
    private authService: AuthService,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.loadAutoGeneratedReports();
  }

  loadAutoGeneratedReports(): void {
    this.loading = true;
    this.error = null;

    const userId = this.authService.getCurrentUser()?.id;
    if (!userId) {
      this.error = 'User ID not available. Cannot load reports.';
      this.loading = false;
      return;
    }

    this.reportService.getReportsByExpert(userId)
      .pipe(
        finalize(() => this.loading = false),
        catchError(err => {
          this.error = 'Failed to load reports: ' + err.message;
          console.error('Error loading reports:', err);
          this.toastr.error(this.error, 'Error');
          return of([]);
        })
      )
      .subscribe(reports => {
        this.reports = reports.filter(report => report.generatedBy === 'Auto-Generated');
      });
  }

  viewReport(reportId: string): void {
    // Navigate to the report details page
    // Assuming you have a route like /reports/:reportId
    // Adjust the route as necessary
    this.router.navigate(['/reports', reportId]);
  }
}
